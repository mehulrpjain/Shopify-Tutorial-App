{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Banner, Frame, Toast, Card, DisplayText, Form, FormLayout, Layout, Page, PageActions, TextField } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nconst UPDATE_PRICE = gql`\n    mutation productVariantUpdate($input: ProductVariantInput!) {\n        productVariantUpdate(input: $input) {\n            product {\n                title\n            }\n            productVariant {\n                id\n                price\n            }\n        }\n    }\n    `;\n\nclass EditProduct extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      discount: '',\n      price: '',\n      variantId: '',\n      showToast: false\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"itemToBeConsumed\", () => {\n      const item = store.get('item');\n      const price = item.variants.edges[0].node.price;\n      const variantId = item.variants.edges[0].node.id;\n      const discounter = price * 0.1;\n      this.setState({\n        price,\n        variantId\n      });\n      console.log(this.state);\n      return (price - discounter).toFixed(2);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      discount: this.itemToBeConsumed()\n    });\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      discount,\n      variantId\n    } = this.state;\n    return __jsx(Mutation, {\n      mutation: UPDATE_PRICE\n    }, (handleSubmit, {\n      error,\n      data\n    }) => {\n      const showError = error && __jsx(Banner, {\n        status: \"critical\"\n      }, error.message);\n\n      const showToast = data && data.productVariantUpdate && __jsx(Toast, {\n        content: \"Sucessfully updated\",\n        onDismiss: () => this.setState({\n          showToast: false\n        })\n      });\n\n      return __jsx(Frame, null, __jsx(Page, null, __jsx(Layout, null, showToast, __jsx(Layout.Section, null, showError), __jsx(Layout.Section, null, __jsx(DisplayText, {\n        size: \"large\"\n      }, name), __jsx(Form, null, __jsx(Card, {\n        sectioned: true\n      }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n        prefix: \"$\",\n        value: price,\n        disabled: true,\n        label: \"Original price\",\n        type: \"price\"\n      }), __jsx(TextField, {\n        prefix: \"$\",\n        value: discount,\n        onChange: this.handleChange('discount'),\n        label: \"Discounted price\",\n        type: \"discount\"\n      })), __jsx(\"p\", null, \"This sale price will expire in two weeks\"))), __jsx(PageActions, {\n        primaryAction: [{\n          content: 'Save',\n          onAction: () => {\n            const productVariableInput = {\n              id: variantId,\n              price: discount\n            };\n            handleSubmit({\n              variables: {\n                input: productVariableInput\n              }\n            });\n          }\n        }],\n        secondaryActions: [{\n          content: 'Remove discount'\n        }]\n      }))))));\n    });\n  }\n\n}\n\nexport default EditProduct;","map":{"version":3,"sources":["C:/Users/mehul/shopify-app/pages/edit-products.js"],"names":["Banner","Frame","Toast","Card","DisplayText","Form","FormLayout","Layout","Page","PageActions","TextField","store","gql","Mutation","UPDATE_PRICE","EditProduct","React","Component","discount","price","variantId","showToast","field","value","setState","item","get","variants","edges","node","id","discounter","console","log","state","toFixed","componentDidMount","itemToBeConsumed","render","name","handleSubmit","error","data","showError","message","productVariantUpdate","handleChange","content","onAction","productVariableInput","variables","input"],"mappings":"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","sourcesContent":["import {\r\n    Banner,\r\n    Frame,\r\n    Toast,\r\n    Card,\r\n    DisplayText,\r\n    Form,\r\n    FormLayout,\r\n    Layout,\r\n    Page,\r\n    PageActions,\r\n    TextField\r\n  } from '@shopify/polaris';\r\nimport store from 'store-js';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation } from 'react-apollo';\r\n\r\n  const UPDATE_PRICE = gql`\r\n    mutation productVariantUpdate($input: ProductVariantInput!) {\r\n        productVariantUpdate(input: $input) {\r\n            product {\r\n                title\r\n            }\r\n            productVariant {\r\n                id\r\n                price\r\n            }\r\n        }\r\n    }\r\n    `;\r\n\r\n\r\n  class EditProduct extends React.Component {\r\n    state = {\r\n      discount: '',\r\n      price: '',\r\n      variantId: '',\r\n      showToast:false\r\n    };\r\n  \r\n    componentDidMount() {\r\n      this.setState({ discount: this.itemToBeConsumed() });\r\n    }\r\n\r\n    render() {\r\n        const { name, price, discount, variantId } = this.state;\r\n\r\n        return (\r\n            <Mutation\r\n            mutation={UPDATE_PRICE} \r\n            >\r\n            {(handleSubmit, {error, data}) => {\r\n                const showError = error && (\r\n                    <Banner status=\"critical\">{error.message}</Banner>\r\n                  );\r\n                const showToast = data && data.productVariantUpdate && (\r\n                    <Toast\r\n                      content=\"Sucessfully updated\"\r\n                      onDismiss={() => this.setState({ showToast: false })}\r\n                    />\r\n                  );\r\n            return(\r\n                <Frame>\r\n                <Page>\r\n                <Layout>\r\n                    {showToast}\r\n                    <Layout.Section>\r\n                        {showError}\r\n                    </Layout.Section>\r\n                    <Layout.Section>\r\n                    <DisplayText size=\"large\">{name}</DisplayText>\r\n                    <Form>\r\n                        <Card sectioned>\r\n                        <FormLayout>\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                                prefix=\"$\"\r\n                                value={price}\r\n                                disabled={true}\r\n                                label=\"Original price\"\r\n                                type=\"price\"\r\n                            />\r\n                            <TextField\r\n                                prefix=\"$\"\r\n                                value={discount}\r\n                                onChange={this.handleChange('discount')}\r\n                                label=\"Discounted price\"\r\n                                type=\"discount\"\r\n                            />\r\n                            </FormLayout.Group>\r\n                            <p>\r\n                            This sale price will expire in two weeks\r\n                            </p>\r\n                        </FormLayout>\r\n                        </Card>\r\n                        <PageActions\r\n                        primaryAction={[\r\n                            {\r\n                            content: 'Save',\r\n                            onAction: () => {\r\n                                const productVariableInput = {\r\n                                    id: variantId,\r\n                                    price: discount,\r\n                                };\r\n                                handleSubmit({\r\n                                    variables: { input: productVariableInput },\r\n                                });\r\n                            }\r\n                            }\r\n                        ]}\r\n                        secondaryActions={[\r\n                            {\r\n                            content: 'Remove discount'\r\n                            }\r\n                        ]}\r\n                        />\r\n                    </Form>\r\n                    </Layout.Section>\r\n                </Layout>\r\n                </Page>\r\n                </Frame>\r\n            );\r\n        }}\r\n        </Mutation>\r\n        );\r\n        }\r\n      \r\n        handleChange = (field) => {\r\n          return (value) => this.setState({ [field]: value });\r\n        };\r\n\r\n              \r\n        itemToBeConsumed = () => {\r\n          const item = store.get('item');\r\n          const price = item.variants.edges[0].node.price;\r\n          const variantId = item.variants.edges[0].node.id;\r\n          const discounter = price * 0.1;\r\n          this.setState({ price, variantId });\r\n          console.log(this.state);\r\n\r\n          return (price - discounter).toFixed(2);\r\n        };\r\n      }\r\n      \r\n      export default EditProduct;"]},"metadata":{},"sourceType":"module"}