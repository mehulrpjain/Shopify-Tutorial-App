{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation productVariantUpdate($input: ProductVariantInput!) {\\n        productVariantUpdate(input: $input) {\\n            product {\\n                title\\n            }\\n            productVariant {\\n                id\\n                price\\n            }\\n        }\\n    }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Banner, Frame, Toast, Card, DisplayText, Form, FormLayout, Layout, Page, PageActions, TextField } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nvar UPDATE_PRICE = gql(_templateObject());\n\nvar EditProduct = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditProduct, _React$Component);\n\n  var _super = _createSuper(EditProduct);\n\n  function EditProduct() {\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      discount: '',\n      price: '',\n      variantId: '',\n      showToast: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get('item');\n      var price = item.variants.edges[0].node.price;\n      var variantId = item.variants.edges[0].node.id;\n      var discounter = price * 0.1;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      }); //console.log(this.state);\n\n\n      return (price - discounter).toFixed(2);\n    });\n\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        discount: this.itemToBeConsumed()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          discount = _this$state.discount,\n          price = _this$state.price,\n          variantId = _this$state.variantId;\n      console.log(name, price, discount, variantId);\n      console.log(this.state);\n      return __jsx(Mutation, {\n        mutation: UPDATE_PRICE\n      }, function (handleSubmit, _ref) {\n        var error = _ref.error,\n            data = _ref.data;\n\n        var showError = error && __jsx(Banner, {\n          status: \"critical\"\n        }, error.message);\n\n        var showToast = data && data.productVariantUpdate && __jsx(Toast, {\n          content: \"Sucessfully updated\",\n          onDismiss: function onDismiss() {\n            return _this2.setState({\n              showToast: false\n            });\n          }\n        });\n\n        return __jsx(Frame, null, __jsx(Page, null, __jsx(Layout, null, showToast, __jsx(Layout.Section, null, showError), __jsx(Layout.Section, null, __jsx(DisplayText, {\n          size: \"large\"\n        }, name), __jsx(Form, null, __jsx(Card, {\n          sectioned: true\n        }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n          prefix: \"$\",\n          value: price,\n          disabled: true,\n          label: \"Original price\",\n          type: \"price\"\n        }), __jsx(TextField, {\n          prefix: \"$\",\n          value: discount,\n          onChange: _this2.handleChange('discount'),\n          label: \"Discounted price\",\n          type: \"discount\"\n        })), __jsx(\"p\", null, \"This sale price will expire in two weeks\"))), __jsx(PageActions, {\n          primaryAction: [{\n            content: 'Save',\n            onAction: function onAction() {\n              var productVariableInput = {\n                id: variantId,\n                price: discount\n              };\n              handleSubmit({\n                variables: {\n                  input: productVariableInput\n                }\n              });\n            }\n          }],\n          secondaryActions: [{\n            content: 'Remove discount'\n          }]\n        }))))));\n      });\n    }\n  }]);\n\n  return EditProduct;\n}(React.Component);\n\nexport default EditProduct;","map":{"version":3,"sources":["C:/Users/mehul/shopify-app/pages/edit-products.js"],"names":["Banner","Frame","Toast","Card","DisplayText","Form","FormLayout","Layout","Page","PageActions","TextField","store","gql","Mutation","UPDATE_PRICE","EditProduct","discount","price","variantId","showToast","field","value","setState","item","get","variants","edges","node","id","discounter","toFixed","itemToBeConsumed","state","name","console","log","handleSubmit","error","data","showError","message","productVariantUpdate","handleChange","content","onAction","productVariableInput","variables","input","React","Component"],"mappings":"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","sourcesContent":["import {\r\n    Banner,\r\n    Frame,\r\n    Toast,\r\n    Card,\r\n    DisplayText,\r\n    Form,\r\n    FormLayout,\r\n    Layout,\r\n    Page,\r\n    PageActions,\r\n    TextField\r\n  } from '@shopify/polaris';\r\nimport store from 'store-js';\r\nimport gql from 'graphql-tag';\r\nimport { Mutation } from 'react-apollo';\r\n\r\n  const UPDATE_PRICE = gql`\r\n    mutation productVariantUpdate($input: ProductVariantInput!) {\r\n        productVariantUpdate(input: $input) {\r\n            product {\r\n                title\r\n            }\r\n            productVariant {\r\n                id\r\n                price\r\n            }\r\n        }\r\n    }\r\n    `;\r\n\r\n\r\n  class EditProduct extends React.Component {\r\n    state = {\r\n      discount: '',\r\n      price: '',\r\n      variantId: '',\r\n      showToast:false\r\n    };\r\n  \r\n    componentDidMount() {\r\n      this.setState({ discount: this.itemToBeConsumed() });\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { name, discount, price, variantId } = this.state;\r\n        console.log(name, price, discount, variantId);\r\n        console.log(this.state);\r\n        return (\r\n            <Mutation\r\n            mutation={UPDATE_PRICE} \r\n            >\r\n            {(handleSubmit, {error, data}) => {\r\n                const showError = error && (\r\n                    <Banner status=\"critical\">{error.message}</Banner>\r\n                  );\r\n                const showToast = data && data.productVariantUpdate && (\r\n                    <Toast\r\n                      content=\"Sucessfully updated\"\r\n                      onDismiss={() => this.setState({ showToast: false })}\r\n                    />\r\n                  );\r\n            return(\r\n                <Frame>\r\n                <Page>\r\n                <Layout>\r\n                    {showToast}\r\n                    <Layout.Section>\r\n                        {showError}\r\n                    </Layout.Section>\r\n                    <Layout.Section>\r\n                    <DisplayText size=\"large\">{name}</DisplayText>\r\n                    <Form>\r\n                        <Card sectioned>\r\n                        <FormLayout>\r\n                            <FormLayout.Group>\r\n                            <TextField\r\n                                prefix=\"$\"\r\n                                value={price}\r\n                                disabled={true}\r\n                                label=\"Original price\"\r\n                                type=\"price\"\r\n                            />\r\n                            <TextField\r\n                                prefix=\"$\"\r\n                                value={discount}\r\n                                onChange={this.handleChange('discount')}\r\n                                label=\"Discounted price\"\r\n                                type=\"discount\"\r\n                            />\r\n                            </FormLayout.Group>\r\n                            <p>\r\n                            This sale price will expire in two weeks\r\n                            </p>\r\n                        </FormLayout>\r\n                        </Card>\r\n                        <PageActions\r\n                        primaryAction={[\r\n                            {\r\n                            content: 'Save',\r\n                            onAction: () => {\r\n                                const productVariableInput = {\r\n                                    id: variantId,\r\n                                    price: discount,\r\n                                };\r\n                                handleSubmit({\r\n                                    variables: { input: productVariableInput },\r\n                                });\r\n                            }\r\n                            }\r\n                        ]}\r\n                        secondaryActions={[\r\n                            {\r\n                            content: 'Remove discount'\r\n                            }\r\n                        ]}\r\n                        />\r\n                    </Form>\r\n                    </Layout.Section>\r\n                </Layout>\r\n                </Page>\r\n                </Frame>\r\n            );\r\n        }}\r\n        </Mutation>\r\n        );\r\n        }\r\n      \r\n        handleChange = (field) => {\r\n          return (value) => this.setState({ [field]: value });\r\n        };\r\n\r\n              \r\n        itemToBeConsumed = () => {\r\n          const item = store.get('item');\r\n          const price = item.variants.edges[0].node.price;\r\n          const variantId = item.variants.edges[0].node.id;\r\n          const discounter = price * 0.1;\r\n          this.setState({ price, variantId });\r\n          //console.log(this.state);\r\n\r\n          return (price - discounter).toFixed(2);\r\n        };\r\n      }\r\n      \r\n      export default EditProduct;"]},"metadata":{},"sourceType":"module"}