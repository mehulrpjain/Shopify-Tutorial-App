{"ast":null,"code":"\"use strict\";\n\nvar _graphqlTag = _interopRequireDefault(require(\"graphql-tag\"));\n\nvar _reactApollo = require(\"react-apollo\");\n\nvar _polaris = require(\"@shopify/polaris\");\n\nvar _storeJs = _interopRequireDefault(require(\"store-js\"));\n\nvar _actions = require(\"@shopify/app-bridge/actions\");\n\nvar _appBridgeReact = require(\"@shopify/app-bridge-react\");\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst GET_PRODUCTS_BY_ID = (0, _graphqlTag.default)`\n    query getProducts($ids: [ID!]!){\n        nodes(ids: $ids){\n            ... on Product{\n                title\n                handle\n                descriptionHtml\n                id\n                images(first:1){\n                    edges {\n                        node {\n                            originalSrc\n                            altText\n                        }\n                    }\n                }\n                variants(first: 1){\n                    edges{\n                        node{\n                            price\n                            id\n                        }\n                    }\n                }\n            }\n        }\n    }\n    `;\n\nclass ResourceListwithProducts extends React.Component {\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = _actions.Redirect.create(app);\n\n      redirect.dispatch(_actions.Redirect.Action.APP, '/edit-products');\n    };\n\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return __jsx(_reactApollo.Query, {\n      query: GET_PRODUCTS_BY_ID,\n      variables: {\n        ids: _storeJs.default.get('ids')\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) return __jsx(\"div\", null, \"Loading...\");\n      if (error) return __jsx(\"div\", null, error.message);\n      console.log(data);\n      return __jsx(_polaris.Card, null, __jsx(_polaris.ResourceList, {\n        showHeader: true,\n        resourceName: {\n          singular: 'Product',\n          plural: 'Products'\n        },\n        items: data.nodes,\n        renderItem: item => {\n          const media = __jsx(_polaris.Thumbnail, {\n            source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n            alt: item.images.edges[0] ? item.images.edges[0].node.altText : ''\n          });\n\n          const price = item.variants.edges[0].node.price;\n          return __jsx(_polaris.ResourceList.Item, {\n            id: item.id,\n            media: media,\n            accessibilityLabel: `View details for ${item.title}`,\n            onClick: () => {\n              _storeJs.default.set('item', item);\n\n              redirectToProduct();\n            }\n          }, __jsx(_polaris.Stack, null, __jsx(_polaris.Stack.Item, {\n            fill: true\n          }, __jsx(\"h3\", null, __jsx(_polaris.TextStyle, {\n            variation: \"strong\"\n          }, item.title))), __jsx(_polaris.Stack.Item, null, __jsx(\"p\", null, \"$\", price)), __jsx(_polaris.Stack.Item, null, __jsx(\"p\", null, \"Expires on \", twoWeeksFromNow))));\n        }\n      }));\n    });\n  }\n\n}\n\n_defineProperty(ResourceListwithProducts, \"contextType\", _appBridgeReact.Context);\n\nmodule.exports = ResourceListwithProducts;","map":{"version":3,"sources":["C:/Users/mehul/Documents/Development/Shopify/shopify-app/components/ResourceList.js"],"names":["GET_PRODUCTS_BY_ID","ResourceListwithProducts","React","Component","render","app","context","redirectToProduct","redirect","Redirect","create","dispatch","Action","APP","twoWeeksFromNow","Date","now","toDateString","ids","store","get","data","loading","error","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","id","title","set","Context","module","exports"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;AAEA,MAAMA,kBAAkB,GAAG,wBAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;KAA/B;;AA6BA,MAAMC,wBAAN,SAAuCC,KAAK,CAACC,SAA7C,CAAsD;AAIlDC,EAAAA,MAAM,GAAE;AACJ,UAAMC,GAAG,GAAG,KAAKC,OAAjB;;AACA,UAAMC,iBAAiB,GAAG,MAAM;AAC5B,YAAMC,QAAQ,GAAGC,kBAASC,MAAT,CAAgBL,GAAhB,CAAjB;;AACAG,MAAAA,QAAQ,CAACG,QAAT,CACAF,kBAASG,MAAT,CAAgBC,GADhB,EAEA,gBAFA;AAIH,KAND;;AAQA,UAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,EAA+BC,YAA/B,EAAxB;AAEA,WACI,MAAC,kBAAD;AAAO,MAAA,KAAK,EAAEjB,kBAAd;AAAkC,MAAA,SAAS,EAAE;AAAEkB,QAAAA,GAAG,EAAEC,iBAAMC,GAAN,CAAU,KAAV;AAAP;AAA7C,OACC,CAAC;AAAEC,MAAAA,IAAF;AAAOC,MAAAA,OAAP;AAAeC,MAAAA;AAAf,KAAD,KAA2B;AACpB,UAAID,OAAJ,EAAa,OAAO,gCAAP;AACb,UAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACC,OAAZ,CAAP;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,aACI,MAAC,aAAD,QACI,MAAC,qBAAD;AACI,QAAA,UAAU,MADd;AAEI,QAAA,YAAY,EAAE;AAACM,UAAAA,QAAQ,EAAE,SAAX;AAAsBC,UAAAA,MAAM,EAAE;AAA9B,SAFlB;AAGI,QAAA,KAAK,EAAEP,IAAI,CAACQ,KAHhB;AAII,QAAA,UAAU,EAAEC,IAAI,IAAI;AAChB,gBAAMC,KAAK,GACP,MAAC,kBAAD;AACI,YAAA,MAAM,EACFD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACEH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAD5B,GAEE,EAJV;AAMI,YAAA,GAAG,EACCL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IACEH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BE,OAD5B,GAEE;AATV,YADJ;;AAcA,gBAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcL,KAAd,CAAoB,CAApB,EAAuBC,IAAvB,CAA4BG,KAA1C;AACA,iBACI,MAAC,qBAAD,CAAc,IAAd;AACA,YAAA,EAAE,EAAIP,IAAI,CAACS,EADX;AAEA,YAAA,KAAK,EAAIR,KAFT;AAGA,YAAA,kBAAkB,EAAG,oBAAmBD,IAAI,CAACU,KAAM,EAHnD;AAIA,YAAA,OAAO,EAAE,MAAM;AACXrB,+BAAMsB,GAAN,CAAU,MAAV,EAAkBX,IAAlB;;AACAvB,cAAAA,iBAAiB;AAClB;AAPH,aASA,MAAC,cAAD,QACI,MAAC,cAAD,CAAO,IAAP;AAAY,YAAA,IAAI;AAAhB,aACI,kBACI,MAAC,kBAAD;AAAW,YAAA,SAAS,EAAC;AAArB,aACKuB,IAAI,CAACU,KADV,CADJ,CADJ,CADJ,EAQI,MAAC,cAAD,CAAO,IAAP,QACI,sBAAKH,KAAL,CADJ,CARJ,EAWI,MAAC,cAAD,CAAO,IAAP,QACI,gCAAevB,eAAf,CADJ,CAXJ,CATA,CADJ;AA2BH;AA/CL,QADJ,CADJ;AAqDH,KA1DD,CADJ;AA8DH;;AA9EiD;;gBAAhDb,wB,iBAEmByC,uB;;AA+EzBC,MAAM,CAACC,OAAP,GAAiB3C,wBAAjB","sourcesContent":["import gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\r\nimport store from 'store-js';\r\nimport { Redirect } from '@shopify/app-bridge/actions';\r\nimport { Context } from '@shopify/app-bridge-react';\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n    query getProducts($ids: [ID!]!){\r\n        nodes(ids: $ids){\r\n            ... on Product{\r\n                title\r\n                handle\r\n                descriptionHtml\r\n                id\r\n                images(first:1){\r\n                    edges {\r\n                        node {\r\n                            originalSrc\r\n                            altText\r\n                        }\r\n                    }\r\n                }\r\n                variants(first: 1){\r\n                    edges{\r\n                        node{\r\n                            price\r\n                            id\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    `;\r\n\r\nclass ResourceListwithProducts extends React.Component{\r\n\r\n    static contextType = Context;\r\n\r\n    render(){\r\n        const app = this.context;\r\n        const redirectToProduct = () => {\r\n            const redirect = Redirect.create(app);\r\n            redirect.dispatch(\r\n            Redirect.Action.APP,\r\n            '/edit-products',\r\n            );\r\n        };\r\n        \r\n        const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\r\n\r\n        return(\r\n            <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\r\n            {({ data,loading,error}) => {\r\n                    if (loading) return <div>Loading...</div>;\r\n                    if (error) return <div>{error.message}</div>;\r\n                console.log(data);\r\n                return (\r\n                    <Card>\r\n                        <ResourceList\r\n                            showHeader\r\n                            resourceName={{singular: 'Product', plural: 'Products'}}\r\n                            items={data.nodes}\r\n                            renderItem={item => {\r\n                                const media = (\r\n                                    <Thumbnail\r\n                                        source={\r\n                                            item.images.edges[0]\r\n                                            ? item.images.edges[0].node.originalSrc\r\n                                            : ''\r\n                                        }\r\n                                        alt={\r\n                                            item.images.edges[0]\r\n                                            ? item.images.edges[0].node.altText\r\n                                            : ''\r\n                                        }\r\n                                    />\r\n                                );\r\n                                const price = item.variants.edges[0].node.price;\r\n                                return(\r\n                                    <ResourceList.Item\r\n                                    id = {item.id}\r\n                                    media = {media}\r\n                                    accessibilityLabel={`View details for ${item.title}`}\r\n                                    onClick={() => {\r\n                                        store.set('item', item);\r\n                                        redirectToProduct();\r\n                                      }}\r\n                                    >\r\n                                    <Stack>\r\n                                        <Stack.Item fill>\r\n                                            <h3>\r\n                                                <TextStyle variation=\"strong\">\r\n                                                    {item.title}\r\n                                                </TextStyle>\r\n                                            </h3>\r\n                                        </Stack.Item>\r\n                                        <Stack.Item>\r\n                                            <p>${price}</p>\r\n                                        </Stack.Item>\r\n                                        <Stack.Item>\r\n                                            <p>Expires on {twoWeeksFromNow}</p>\r\n                                        </Stack.Item>\r\n                                    </Stack>\r\n                                    </ResourceList.Item>\r\n                                );\r\n                            }}>\r\n                        </ResourceList>\r\n                    </Card>\r\n                );\r\n            }}\r\n            </Query>\r\n        );\r\n    }\r\n}\r\n\r\nmodule.exports = ResourceListwithProducts;"]},"metadata":{},"sourceType":"script"}